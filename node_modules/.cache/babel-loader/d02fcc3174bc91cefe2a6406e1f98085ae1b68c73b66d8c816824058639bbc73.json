{"ast":null,"code":"var _jsxFileName = \"/Users/SR20464955/Desktop/MERN/my-app/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n  const [text, setText] = useState('Have some balls and say something!!');\n  const [boxstyle, setBoxStyle] = useState({\n    color: 'black',\n    backgroundColor: 'white',\n    border: '10px double black'\n  });\n  const handleOnChange = e => {\n    console.log('On Change activated');\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"box\",\n    style: {\n      backgroundColor: props.toggleMode === 'black' ? 'white' : 'black',\n      color: props.mode === 'black' ? 'white' : 'black'\n    },\n    value: text,\n    id: \"box\",\n    onChange: e => handleOnChange(e),\n    rows: \"13\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"Mbb4HLjH7IIlHmFUvKb3KdJ6QXA=\");\n_c = Form;\nForm.defaultProps = {\n  mode: PropTypes.string.isRequired,\n  toggleMode: PropTypes.string.isRequired\n};\nForm.propTypes = {\n  mode: 'Set Mode here',\n  toggleMode: 'Set Toggle Here'\n};\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsxDEV","_jsxDEV","Form","props","_s","text","setText","boxstyle","setBoxStyle","color","backgroundColor","border","handleOnChange","e","console","log","target","value","className","style","toggleMode","mode","id","onChange","rows","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","string","isRequired","propTypes","$RefreshReg$"],"sources":["/Users/SR20464955/Desktop/MERN/my-app/src/components/Form.js"],"sourcesContent":["import React,{ useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function Form(props) {\n    const [text, setText]=useState('Have some balls and say something!!');\n    const [boxstyle,setBoxStyle]=useState({\n        color:'black',\n        backgroundColor:'white',\n        border:'10px double black',\n      });\n      const handleOnChange=(e)=>{\n        console.log('On Change activated');\n        setText(e.target.value);\n      }\n  return (\n    <textarea className=\"box\" style={{backgroundColor:props.toggleMode==='black'?'white':'black', color:props.mode==='black'?'white':'black'}} value={text} id=\"box\" onChange={(e)=>handleOnChange(e)} rows=\"13\"></textarea>\n  )\n}\n\nForm.defaultProps={\n    mode:PropTypes.string.isRequired,\n    toggleMode:PropTypes.string.isRequired,\n}\n\nForm.propTypes={\n    mode:'Set Mode here',\n    toggleMode:'Set Toggle Here',\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACT,QAAQ,CAAC,qCAAqC,CAAC;EACrE,MAAM,CAACU,QAAQ,EAACC,WAAW,CAAC,GAACX,QAAQ,CAAC;IAClCY,KAAK,EAAC,OAAO;IACbC,eAAe,EAAC,OAAO;IACvBC,MAAM,EAAC;EACT,CAAC,CAAC;EACF,MAAMC,cAAc,GAAEC,CAAC,IAAG;IACxBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCT,OAAO,CAACO,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EACL,oBACEhB,OAAA;IAAUiB,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAACT,eAAe,EAACP,KAAK,CAACiB,UAAU,KAAG,OAAO,GAAC,OAAO,GAAC,OAAO;MAAEX,KAAK,EAACN,KAAK,CAACkB,IAAI,KAAG,OAAO,GAAC,OAAO,GAAC;IAAO,CAAE;IAACJ,KAAK,EAAEZ,IAAK;IAACiB,EAAE,EAAC,KAAK;IAACC,QAAQ,EAAGV,CAAC,IAAGD,cAAc,CAACC,CAAC,CAAE;IAACW,IAAI,EAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AAE5N;AAACxB,EAAA,CAduBF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAgB5BA,IAAI,CAAC4B,YAAY,GAAC;EACdT,IAAI,EAACtB,SAAS,CAACgC,MAAM,CAACC,UAAU;EAChCZ,UAAU,EAACrB,SAAS,CAACgC,MAAM,CAACC;AAChC,CAAC;AAED9B,IAAI,CAAC+B,SAAS,GAAC;EACXZ,IAAI,EAAC,eAAe;EACpBD,UAAU,EAAC;AACf,CAAC;AAAA,IAAAS,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}