{"ast":null,"code":"var _jsxFileName = \"/Users/SR20464955/Desktop/MERN/my-app/src/context/DarkModeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create a context for dark mode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext();\n\n// Create a DarkModeProvider component\nexport function DarkModeProvider({\n  children\n}) {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n// Create a custom hook to access the dark mode context\n_s(DarkModeProvider, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = DarkModeProvider;\nexport function useDarkMode() {\n  _s2();\n  return useContext(DarkModeContext);\n}\n_s2(useDarkMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","DarkModeContext","DarkModeProvider","children","_s","isDarkMode","setIsDarkMode","toggleDarkMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDarkMode","_s2","$RefreshReg$"],"sources":["/Users/SR20464955/Desktop/MERN/my-app/src/context/DarkModeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create a context for dark mode\nconst DarkModeContext = createContext();\n\n// Create a DarkModeProvider component\nexport function DarkModeProvider({ children }) {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\n      {children}\n    </DarkModeContext.Provider>\n  );\n}\n\n// Create a custom hook to access the dark mode context\nexport function useDarkMode() {\n  return useContext(DarkModeContext);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;;AAEvC;AACA,OAAO,SAASM,gBAAgBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA,CAACC,eAAe,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,UAAU;MAAEE;IAAe,CAAE;IAAAJ,QAAA,EAC7DA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;;AAEA;AAAAT,EAAA,CAdgBF,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AAehC,OAAO,SAASa,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,OAAOnB,UAAU,CAACI,eAAe,CAAC;AACpC;AAACe,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}