{"ast":null,"code":"var _jsxFileName = \"/Users/SR20464955/Desktop/MERN/my-app/src/components/Content.js\",\n  _s = $RefreshSig$();\nimport Foreigner from './Foreigner';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content(props) {\n  _s();\n  const initialMode = localStorage.getItem('mode') || 'light';\n  const [mode, setMode] = useState(initialMode);\n  useEffect(() => {\n    document.body.style.backgroundColor = mode === 'dark' ? 'black' : 'white';\n    // Save the mode to local storage whenever it changes\n    localStorage.setItem('mode', mode);\n  }, [mode]);\n  const toggleMode = () => {\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Geia Sas, \", /*#__PURE__*/_jsxDEV(Foreigner, {\n      name: \"Vinayak Santhosh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this), \"!! Sorry to startle you with the roaring and manly war cry up there! Feel free to explore the once renowned city that was ruled by the great Leonidas. Not the protagonist from the movie\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://en.wikipedia.org/wiki/300_(film)\",\n      target: \"_blank\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://whatthelogo.com/storage/logos/frank-millers-300-8841.png\",\n        alt: \"300 movie logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), \", but the real King Leonidas.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Content, \"CtdjjYoF0AnuJBZrx9iwCMLQG6E=\");\n_c = Content;\nContent.propTypes = {\n  mode: PropTypes.string.isRequired,\n  toggleMode: PropTypes.string.isRequired\n};\nContent.defaultProps = {\n  mode: 'Set Color here',\n  toggleMode: 'Set Mode here'\n};\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["Foreigner","PropTypes","React","useState","useEffect","jsxDEV","_jsxDEV","Content","props","_s","initialMode","localStorage","getItem","mode","setMode","document","body","style","backgroundColor","setItem","toggleMode","children","name","fileName","_jsxFileName","lineNumber","columnNumber","href","target","src","alt","_c","propTypes","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/Users/SR20464955/Desktop/MERN/my-app/src/components/Content.js"],"sourcesContent":["import Foreigner from './Foreigner';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react'\n\nexport default function Content(props) {\n    const initialMode = localStorage.getItem('mode') || 'light';\n  const [mode, setMode] = useState(initialMode);\n  useEffect(() => {\n    document.body.style.backgroundColor = mode === 'dark' ? 'black' : 'white';\n    // Save the mode to local storage whenever it changes\n    localStorage.setItem('mode', mode);\n  }, [mode]);\n\n  const toggleMode = () => {\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n    return (\n        <p>\n            Geia Sas, <Foreigner name=\"Vinayak Santhosh\" />!! Sorry to startle you with the roaring and manly war cry up there!\n            Feel free to explore the once renowned city that was ruled by the great Leonidas.\n            Not the protagonist from the movie{' '}\n            <a href=\"https://en.wikipedia.org/wiki/300_(film)\" target=\"_blank\">\n                <img src=\"https://whatthelogo.com/storage/logos/frank-millers-300-8841.png\" alt=\"300 movie logo\" />\n            </a>, but the real King Leonidas.\n        </p>\n    );\n}\n\nContent.propTypes={\n    mode:PropTypes.string.isRequired,\n    toggleMode:PropTypes.string.isRequired,\n}\n\nContent.defaultProps={\n    mode:'Set Color here',\n    toggleMode:'Set Mode here',\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO;EAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACO,WAAW,CAAC;EAC7CN,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAGL,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO;IACzE;IACAF,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEN,IAAI,CAAC;EACpC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBN,OAAO,CAACD,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC9C,CAAC;EACC,oBACIP,OAAA;IAAAe,QAAA,GAAG,YACW,eAAAf,OAAA,CAACN,SAAS;MAACsB,IAAI,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,6LAEb,EAAC,GAAG,eACtCpB,OAAA;MAAGqB,IAAI,EAAC,0CAA0C;MAACC,MAAM,EAAC,QAAQ;MAAAP,QAAA,eAC9Df,OAAA;QAAKuB,GAAG,EAAC,kEAAkE;QAACC,GAAG,EAAC;MAAgB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC,iCACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAEZ;AAACjB,EAAA,CAtBuBF,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAwB/BA,OAAO,CAACyB,SAAS,GAAC;EACdnB,IAAI,EAACZ,SAAS,CAACgC,MAAM,CAACC,UAAU;EAChCd,UAAU,EAACnB,SAAS,CAACgC,MAAM,CAACC;AAChC,CAAC;AAED3B,OAAO,CAAC4B,YAAY,GAAC;EACjBtB,IAAI,EAAC,gBAAgB;EACrBO,UAAU,EAAC;AACf,CAAC;AAAA,IAAAW,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}