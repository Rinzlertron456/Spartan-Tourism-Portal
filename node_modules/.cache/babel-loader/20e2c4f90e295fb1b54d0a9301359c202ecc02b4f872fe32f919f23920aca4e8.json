{"ast":null,"code":"var _jsxFileName = \"/Users/SR20464955/Desktop/MERN/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport SpartanAbode from '../src/components/SpartanAbode';\nimport Testimonials from './components/Testimonials';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialMode = localStorage.getItem('mode') || 'light';\n  const [mode, setMode] = useState(initialMode);\n  useEffect(() => {\n    document.body.style.backgroundColor = mode === 'dark' ? 'black' : 'white';\n    // Save the mode to local storage whenever it changes\n    localStorage.setItem('mode', mode);\n  }, [mode]);\n  const toggleMode = () => {\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      name: \"Vinayak Santhosh\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alerttype: \"Behold, Viewer!! Sparta is incomplete. Proceed with caution!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(SpartanAbode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/testimonial\",\n          element: /*#__PURE__*/_jsxDEV(Testimonials, {\n            mode: mode,\n            toggleMode: toggleMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"CtdjjYoF0AnuJBZrx9iwCMLQG6E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Route","Routes","React","useState","useEffect","Home","NavBar","SpartanAbode","Testimonials","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initialMode","localStorage","getItem","mode","setMode","document","body","style","backgroundColor","setItem","toggleMode","children","name","fileName","_jsxFileName","lineNumber","columnNumber","alerttype","path","element","_c","$RefreshReg$"],"sources":["/Users/SR20464955/Desktop/MERN/my-app/src/App.js"],"sourcesContent":["import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport SpartanAbode from '../src/components/SpartanAbode';\nimport Testimonials from './components/Testimonials';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const initialMode = localStorage.getItem('mode') || 'light';\n  const [mode, setMode] = useState(initialMode);\n  useEffect(() => {\n    document.body.style.backgroundColor = mode === 'dark' ? 'black' : 'white';\n    // Save the mode to local storage whenever it changes\n    localStorage.setItem('mode', mode);\n  }, [mode]);\n\n  const toggleMode = () => {\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n  return (\n    <>\n    <NavBar name=\"Vinayak Santhosh\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alerttype='Behold, Viewer!! Sparta is incomplete. Proceed with caution!'/>\n    <BrowserRouter>\n        <Routes>\n          <Route path='/' element={<Home />}></Route>\n          <Route path='/about' element={<SpartanAbode/>}></Route>\n          <Route path='/testimonial' element={<Testimonials mode={mode} toggleMode={toggleMode}/>}></Route>\n        </Routes>\n    </BrowserRouter>\n    </>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}